
substitutions:
  name: gl-s10-bt-proxy29a304
# packages:
#   esphome.bluetooth-proxy: github://esphome/bluetooth-proxies/gl-s10.yaml@main
# esphome:
#   name: ${name}
#   name_add_mac_suffix: false

  esphome:
  name: ${name}
  name_add_mac_suffix: false
  project:
    name: esphome.bluetooth-proxy
    version: "1.0"
# turn on Power LED when esphome boots
  on_boot:
    then:
      - output.turn_on: power_led

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: esp-idf
    
# Configuration for V2.3 hardware revision
ethernet:
  type: IP101
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 1
  power_pin: GPIO5
manual_ip: 
static_ip: !secret stateIP
gateway: !secret servIP
subnet: !secret sramaIP 

# Comment the above and use this instead for V1.0 revision of the hardware
# ethernet:
#   type: LAN8720
#   mdc_pin: GPIO23
#   mdio_pin: GPIO18
#   clk_mode: GPIO17_OUT
#   phy_addr: 1

api:
 encryption:
  key:: !secret HAapi
logger:
 level: VERBOSE
ota:

captive_portal:

substitutions: 
   device_name: "ESPhome" #Nazwa Twojego urządzenia wyświetlana w Home Assistant

# Pobieranie czasu z HA
time:
  - platform: homeassistant
    id: homeassistant_time




dashboard_import:
  package_import_url: github://esphome/bluetooth-proxies/gl-s10.yaml@main

esp32_ble_tracker:
  scan_parameters:
      interval: 1100ms
      window: 1100ms
      active: true
 #Bluetooth LED blinks when receiving Bluetooth advertising
  on_ble_advertise:
    then:
      - output.turn_on: bluetooth_led
      - delay: 0.5s
      - output.turn_off: bluetooth_led

bluetooth_proxy:
   active: true

button:
- platform: safe_mode
  name: Safe Mode Boot
  entity_category: diagnostic

## DEVICE SPECIFIC CONFIGURATION
# network LED (white one) configured as status led
status_led:
  pin:
  number: GPIO32
  inverted: true

# button on the side labeled RESET
binary_sensor:

  - platform: gpio
    pin:
    number: GPIO33
    inverted: true
    name: "Reset Button"
    
# bluetooth LED on when connected to Home Assistant

 - platform: status
   name: "${name} Status"
   internal: true
   on_press:
     - output.turn_on: bluetooth_led
   on_release:
     - output.turn_off: bluetooth_led

# output settings for LED's marked Power and Bluetooth
# power LED use: see code line 12
# bluetooth LED use: see code line 41

output:
  - platform: gpio
    pin: GPIO14
    inverted: true
    id: power_led
  - platform: gpio
    pin: GPIO12
    inverted: true
    id: bluetooth_led

# since these pins are broken out inside and labeled as I2C pins they're configured here
  i2c:
  sda: 15
  scl: 13
  scan: true
  
# uptime sensor
- platform: uptime
  name: ${name}_uptime
